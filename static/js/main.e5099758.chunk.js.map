{"version":3,"sources":["routes/routes.js","Components/LoadingIndicator/LoadingIndicator.js","Components/Books/BookList.js","Components/Books/BookSearch.js","Components/Cart/CartIcon.js","Pages/Books/Books.js","Constants/ServerUrl.js","Services/fetchData.js","Components/Cart/CartComponent.js","Pages/Cart.js/Cart.js","Components/Login/Login.js","Pages/Login/LoginPage.js","App.js","serviceWorker.js","index.js","assets/images/loading.gif"],"names":["routes","books","cart","login","LoadingIndicator","src","require","alt","React","Component","BookList","id","title","author","genre","year","totalBooks","availability","image","book","handleAddToCart","handleRemoveFromCart","availableDate","Card","CardImg","CardBody","CardSubtitle","CardText","Badge","pill","variant","className","find","x","onClick","bind","disabled","BookSearch","searchType","placeholderText","onChange","console","log","type","placeholder","aria-label","useStyles","makeStyles","theme","root","display","flexDirection","formControl","margin","spacing","row","justifyContent","CartIcon","classes","to","pathname","color","length","max","badgeContent","showZero","icon","faShoppingBag","size","Books","state","SearchBook","e","props","handleSearch","handleSubmit","preventDefault","this","bookList","isAuthenticated","btnType","map","bookIndex","index","noOfBooks","yearOfPublication","PRIMARY_SERVER","GET_BOOKS","GET_USERS","fetchData","route","requestUrl","Promise","resolve","reject","fetch","then","response","json","data","catch","error","CartComponent","modal","backToBookPage","toggle","backdrop","keyboard","handleCheckOut","Modal","isOpen","ModalBody","Table","TableHead","TableRow","TableCell","cartIter","cartIndex","TableBody","Button","ModalFooter","Alert","ModalHeader","Cart","setState","prevState","body","backgroundColor","palette","common","white","paper","marginTop","alignItems","avatar","secondary","main","form","width","submit","Login","users","onUsernameChange","onPasswordChange","checkLogin","customInputLabel","customInputPlaceholder","customPasswordLabel","customPasswordPlaceholder","Container","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","TextField","required","fullWidth","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","LoginPage","App","setBookList","bookNextAvailability","username","password","customInputPlaceHolder","customPasswordPlaceHolder","loadUsersData","a","event","target","history","location","filter","user","accountAuthDetails","localStorage","setItem","JSON","stringify","push","alert","signOut","removeItem","loadPostData","currentBookList","newBookList","item","toLowerCase","searchedItem","includes","toString","cartItem","filteredCart","filteredBooks","todayDate","Date","setDate","getDate","predictedAvailaibility","getMonth","getFullYear","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","path","render","withRouter","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e5099758.chunk.js","sourcesContent":["const routes = {\n  books: \"/book\",\n  cart: \"/cart\",\n  login: \"/login\"\n};\n\nexport default routes;\n","import React from \"react\";\n\nclass LoadingIndicator extends React.Component {\n  render() {\n    return (\n      <div>\n        <img src={require(\"../../assets/images/loading.gif\")} alt={\"loading\"} />\n      </div>\n    );\n  }\n}\n\nexport default LoadingIndicator;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\nimport PropTypes from \"prop-types\";\nimport Badge from \"react-bootstrap/Badge\";\n\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button\n} from \"reactstrap\";\n\nconst BookList = ({\n  id,\n  title,\n  author,\n  genre,\n  totalBooks,\n  year,\n  availability,\n  image,\n  book,\n  handleAddToCart,\n  handleRemoveFromCart,\n  cart,\n  availableDate\n}) => {\n  debugger;\n  return (\n    <Card id={id}>\n      <CardImg src={image} alt={\"loading\"} />\n      <CardBody>\n        <h3>{title}</h3>\n        <CardSubtitle> {`Author : ${author}`}</CardSubtitle>\n        <CardSubtitle>Genre : {genre}</CardSubtitle>\n        <CardSubtitle>Year : {year}</CardSubtitle>\n        <CardText>\n          <strong>\n            {availability == \"yes\" ? (\n              <Badge pill variant=\"success\" className=\"badge-size\">\n                {`Available`}\n              </Badge>\n            ) : (\n              <Badge pill variant=\"danger\">\n                Unavailable\n              </Badge>\n            )}\n            {availability == \"no\" ? (\n              <Badge pill variant=\"danger\" className=\"badge-size\">\n                {`Available on : ${availableDate}`}\n              </Badge>\n            ) : (\n              \"\"\n            )}\n          </strong>\n        </CardText>\n        {/* <CardText>\n          In Stock : <strong>{totalBooks}</strong>\n        </CardText> */}\n\n        {cart.find(x => x.id === id) ? (\n          <button\n            className=\"btn btn-danger\"\n            onClick={handleRemoveFromCart.bind(this, book)}\n          >\n            {/* <FontAwesomeIcon icon={faMinus} size=\"5x\"></FontAwesomeIcon>\n            Book Added to bag */}\n            <RemoveRoundedIcon />\n            Remove from cart\n          </button>\n        ) : (\n          <button\n            disabled={availability == \"no\"}\n            className=\"btn btn-primary\"\n            onClick={handleAddToCart.bind(this, book)}\n          >\n            {/* <FontAwesomeIcon icon={faPlus} size=\"5x\"></FontAwesomeIcon>Add to bag */}\n            {/* <span className=\"btn-floating halfway-fab waves-effect waves-light red\">\n              <i className=\"material-icons\">add</i>\n            </span> */}\n            <AddIcon />\n            Add to cart\n          </button>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nBookList.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  availability: PropTypes.string.isRequired,\n  cart: PropTypes.array.isRequired,\n  book: PropTypes.object.isRequired\n};\nexport default BookList;\n","import React, { Component } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport PropTypes from \"prop-types\";\nimport { MDBCol, MDBIcon } from \"mdbreact\";\n\nconst BookSearch = ({ searchType, placeholderText, onChange }) => {\n  console.log();\n  return (\n    <div className=\"container\">\n      <input\n        className=\"form-control\"\n        type={searchType}\n        placeholder={placeholderText}\n        aria-label=\"Search\"\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nBookSearch.propTypes = {\n  searchType: PropTypes.string.isRequired,\n  placeholderText: PropTypes.string.isRequired\n};\nexport default BookSearch;\n\n{\n  /* <form>\n      <input\n        type={searchType}\n        placeholder={placeholderText}\n        className=\"search-keyword\"\n        onChange={onChange}\n      />\n    </form> */\n}\n","import React from \"react\";\nimport { faShoppingBag } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport routes from \"../../routes/routes\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  margin: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst CartIcon = ({ cart, handleRemoveFromCart }) => {\n  debugger;\n  const classes = useStyles();\n  return (\n    <Link to={{ pathname: \"/cart\" }}>\n      <Badge\n        color={cart.length > 0 ? \"secondary\" : \"primary\"}\n        max={10}\n        badgeContent={cart.length}\n        showZero\n        className={classes.margin}\n      >\n        <FontAwesomeIcon icon={faShoppingBag} size=\"3x\"></FontAwesomeIcon>\n      </Badge>\n    </Link>\n  );\n};\n\nCartIcon.propTypes = {\n  cart: PropTypes.array.isRequired\n};\n\nexport default CartIcon;\n","import React, { Component, Fragment } from \"react\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator/LoadingIndicator\";\n//import data from \"../../data/bookdetails\";\nimport BookList from \"../../Components/Books/BookList\";\nimport BookSearch from \"../../Components/Books/BookSearch\";\nimport CartIcon from \"../../Components/Cart/CartIcon\";\n\nclass Books extends Component {\n  state = {};\n\n  SearchBook = e => {\n    debugger;\n    this.props.handleSearch(e);\n  };\n\n  handleSubmit = e => {\n    debugger;\n    e.preventDefault();\n  };\n\n  render() {\n    const {\n      bookList,\n      cart,\n      availableDate,\n      handleRemoveFromCart,\n      handleAddToCart,\n      handleSearch,\n      isAuthenticated\n    } = this.props;\n    debugger;\n    return (\n      <Fragment>\n        <BookSearch\n          className=\"container\"\n          searchType=\"search\"\n          placeholderText=\"Search for Books\"\n          onChange={this.SearchBook}\n          btnType=\"submit\"\n          onClick={this.handleSubmit}\n        />\n        <h3>List of Books</h3>\n\n        {bookList.length ? (\n          <div className=\"container box\">\n            {bookList.map((book, bookIndex) => {\n              return (\n                <BookList\n                  id={book.id}\n                  index={bookIndex}\n                  title={book.title}\n                  totalBooks={book.noOfBooks}\n                  author={book.author}\n                  genre={book.genre}\n                  year={book.yearOfPublication}\n                  availability={book.availability}\n                  image={book.image}\n                  book={book}\n                  cart={cart}\n                  availableDate={availableDate}\n                  handleAddToCart={handleAddToCart}\n                  handleRemoveFromCart={handleRemoveFromCart}\n                />\n              );\n            })}\n          </div>\n        ) : bookList.length == 0 ? (\n          <p>{\"No books available in the given name\"}</p>\n        ) : (\n          <LoadingIndicator />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Books;\n","export const PRIMARY_SERVER =\n  \"https://my-json-server.typicode.com/gsprasanna/json-server\";\n\nexport const GET_BOOKS = \"/data\";\n\nexport const POST_BOOKS = \"/data\";\n\nexport const GET_USERS = \"/users\";\n","import { PRIMARY_SERVER } from \"../Constants/ServerUrl\";\n\nconst fetchData = route => {\n  const requestUrl = PRIMARY_SERVER + route;\n\n  return new Promise((resolve, reject) => {\n    fetch(requestUrl)\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\nexport const updateBooks = (route, method, body) => {\n  const requestUrl = PRIMARY_SERVER + route;\n\n  const headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n\n  const requestConfig = {\n    mode: \"cors\",\n    method,\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  return new Promise((resolve, reject) => {\n    fetch(requestUrl, requestConfig)\n      .then(response => response.json())\n      .then(data => {\n        resolve(data);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\nexport default fetchData;\n","import React from \"react\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport LoadingIndicator from \"../LoadingIndicator/LoadingIndicator\";\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes/routes\";\nimport { Alert } from \"reactstrap\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\n\nconst CartComponent = ({\n  cart,\n  handleRemoveFromCart,\n  backToBookPage,\n  modal,\n  toggle,\n  backdrop,\n  keyboard,\n  handleCheckOut\n}) => {\n  debugger;\n  return (\n    <div>\n      {cart.length ? (\n        <Modal\n          isOpen={modal}\n          toggle={toggle}\n          id={cart.id}\n          backdrop={backdrop}\n          size=\"lg\"\n          keyboard={keyboard}\n        >\n          <ModalBody>\n            <Table>\n              <TableHead></TableHead>\n              <TableRow>\n                <TableCell></TableCell>\n                <TableCell>\n                  <strong>Book Title</strong>\n                </TableCell>\n                <TableCell>\n                  <strong>Author</strong>\n                </TableCell>\n                <TableCell>\n                  <strong>Published Year</strong>\n                </TableCell>\n              </TableRow>\n              {cart.map((cartIter, cartIndex) => {\n                return (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>\n                        <img\n                          className=\"thumbnail\"\n                          src={cartIter.image}\n                          alt={\"loading\"}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <strong>{cartIter.title}</strong>\n                      </TableCell>\n                      <TableCell>\n                        <p>{cartIter.author}</p>\n                      </TableCell>\n                      <TableCell>\n                        <p>{cartIter.yearOfPublication}</p>\n                      </TableCell>\n                      <TableCell>\n                        <Button\n                          className=\"btn btn-danger\"\n                          onClick={handleRemoveFromCart.bind(\n                            this,\n                            cartIter,\n                            cart\n                          )}\n                        >\n                          <RemoveRoundedIcon />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                );\n              })}\n            </Table>\n          </ModalBody>\n          <ModalFooter>\n            <NavLink to={routes.books}>\n              <Button color=\"primary\" onClick={handleCheckOut.bind(this, cart)}>\n                Check out\n              </Button>\n            </NavLink>\n\n            <NavLink to={routes.books}>\n              <Button color=\"secondary\">Cancel</Button>\n            </NavLink>\n          </ModalFooter>\n          <ModalFooter>\n            {cart.length == 3 ? (\n              <Alert color=\"danger\">\n                \"you have added the maximum number of books to the cart!\"\n              </Alert>\n            ) : (\n              <Alert color=\"primary\">\n                still you can add {3 - cart.length} books\n              </Alert>\n            )}\n          </ModalFooter>\n        </Modal>\n      ) : (\n        <Modal\n          isOpen={modal}\n          toggle={toggle}\n          id={cart.id}\n          backdrop={backdrop}\n          keyboard={keyboard}\n        >\n          <ModalHeader>Hi Buddy!</ModalHeader>\n          <ModalBody>Please Add the books to the cart!</ModalBody>\n          <ModalFooter>\n            <NavLink to={routes.books}>\n              <Button color=\"secondary\">Cancel</Button>\n            </NavLink>\n          </ModalFooter>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nCartComponent.propTypes = {\n  cart: PropTypes.array.isRequired,\n  modal: PropTypes.bool.isRequired,\n  keyboard: PropTypes.bool.isRequired,\n  backdrop: PropTypes.string.isRequired\n};\nexport default CartComponent;\n","import React, { Component } from \"react\";\nimport CartComponent from \"../../Components/Cart/CartComponent\";\n\nclass Cart extends Component {\n  state = {\n    cart: [],\n    modal: true,\n    backdrop: \"static\",\n    keyboard: false\n  };\n  componentDidMount() {\n    this.setState({\n      cart: this.props.cart\n    });\n  }\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  };\n  // handleRemoveFromCart = book => {\n  //   debugger;\n  //   const { cart } = this.state;\n  //   const filteredCart = cart.filter(x => x.id !== book.id);\n  //   book.noOfBooks = ++book.noOfBooks;\n  //   this.setState({\n  //     cart: filteredCart\n  //   });\n  //   debugger;\n  // };\n  backToBookPage = () => {\n    debugger;\n    let path = \"/book\";\n    // this.props.history.push(path);\n  };\n\n  render() {\n    debugger;\n    const { modal, backdrop, keyboard } = this.state;\n    return (\n      <CartComponent\n        cart={this.props.cart}\n        modal={modal}\n        toggle={this.toggle}\n        keyboard={keyboard}\n        handleRemoveFromCart={this.props.handleRemoveFromCart}\n        backToBookPage={this.backToBookPage}\n        backdrop={backdrop}\n        handleCheckOut={this.props.handleCheckOut}\n      />\n    );\n  }\n}\n\nexport default Cart;\n","import React, { Component } from \"react\";\n\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Login = ({\n  users,\n  isAuthenticated,\n  onUsernameChange,\n  onPasswordChange,\n  checkLogin,\n  customInputLabel,\n  customInputPlaceholder,\n  customPasswordLabel,\n  customPasswordPlaceholder\n}) => {\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={checkLogin}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label={customInputLabel}\n            placeholder={customInputPlaceholder}\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={onUsernameChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label={customPasswordLabel}\n            placeholder={customPasswordPlaceholder}\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={onPasswordChange}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport Login from \"../../Components/Login/Login\";\n\nclass LoginPage extends Component {\n  state = {\n    users: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      users: this.props.users\n    });\n  }\n\n  render() {\n    const { users } = this.state;\n    const {\n      isAuthenticated,\n      onUsernameChange,\n      onPasswordChange,\n      checkLogin,\n      customInputLabel,\n      customInputPlaceholder,\n      customPasswordLabel,\n      customPasswordPlaceholder\n    } = this.props;\n    return (\n      <>\n        <h4>Smart Library</h4>\n        <Login\n          users={users}\n          isAuthenticated={isAuthenticated}\n          onUsernameChange={onUsernameChange}\n          onPasswordChange={onPasswordChange}\n          checkLogin={checkLogin}\n          customInputLabel={customInputLabel}\n          customInputPlaceholder={customInputPlaceholder}\n          customPasswordLabel={customPasswordLabel}\n          customPasswordPlaceholder={customPasswordPlaceholder}\n        />\n      </>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, withRouter, Redirect } from \"react-router-dom\";\nimport routes from \"./routes/routes\";\nimport Books from \"./Pages/Books/Books\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport CartIcon from \"./Components/Cart/CartIcon\";\nimport fetchData, { updateBooks } from \"./Services/fetchData\";\n\nimport { GET_BOOKS, POST_BOOKS, GET_USERS } from \"./Constants/ServerUrl\";\nimport Cart from \"./Pages/Cart.js/Cart\";\nimport LoginPage from \"./Pages/Login/LoginPage\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nclass App extends Component {\n  state = {\n    bookList: [],\n    setBookList: [],\n    cart: [],\n    bookNextAvailability: \"\",\n    isOpen: false,\n    users: [],\n    isAuthenticated: false,\n    username: \"\",\n    password: \"\",\n    customInputLabel: \"Username\",\n    customInputPlaceHolder: \"Enter the Name\",\n    customPasswordLabel: \"Password\",\n    customPasswordPlaceHolder: \"Enter the Password\"\n  };\n\n  componentDidMount() {\n    debugger;\n    const { username, isAuthenticated } = this.state;\n    this.loadPostData();\n    this.loadUsersData();\n    const { history, location } = this.props;\n    if (location.pathname === \"/\" && this.state.isAuthenticated === false) {\n      history.push(routes.login);\n    }\n  }\n\n  loadUsersData = async () => {\n    debugger;\n    try {\n      const users = await fetchData(GET_USERS, \"GET\");\n      //console.log(users);\n      debugger;\n      this.setState({ users });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  onUsernameChange = event => {\n    this.setState({ username: event.target.value });\n  };\n\n  onPasswordChange = event => {\n    this.setState({ password: event.target.value });\n    debugger;\n  };\n\n  checkLogin = e => {\n    debugger;\n    e.preventDefault();\n    const { username, password, users, isAuthenticated } = this.state;\n    const { history, location } = this.props;\n    debugger;\n    let dbUser = users.filter(user => user.name == username);\n    debugger;\n    if (dbUser[0].password === password) {\n      const { isAuthenticated } = this.state;\n      this.setState({\n        isAuthenticated: true\n      });\n      let accountAuthDetails = {\n        username: this.state.username,\n        isAuthenticated: true\n      };\n      localStorage.setItem(\"localAuth\", JSON.stringify(accountAuthDetails));\n      debugger;\n      history.push(routes.books);\n      // return <Redirect to={routes.books} />;\n    } else {\n      alert(\"Please enter the valid credentials\");\n    }\n  };\n\n  signOut = () => {\n    debugger;\n    this.setState({\n      isAuthenticated: false\n    });\n    localStorage.removeItem(\"localAuth\");\n    this.props.history.push(\"/login\");\n  };\n\n  loadPostData = async () => {\n    try {\n      const bookList = await fetchData(GET_BOOKS, \"GET\");\n      //console.log(bookList);\n      this.setState({ bookList, setBookList: bookList });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  handleSearch = e => {\n    debugger;\n    //console.log(e.target.value);\n    let currentBookList = [...this.state.bookList];\n    let newBookList = [];\n    if (e.target.value !== \"\") {\n      newBookList = currentBookList.filter(item => {\n        debugger;\n        const lc = item.title.toLowerCase();\n        const searchedItem = e.target.value;\n\n        return (\n          item.title.toLowerCase().includes(searchedItem.toLowerCase()) ||\n          item.author.toLowerCase().includes(searchedItem.toLowerCase()) ||\n          item.genre.toLowerCase().includes(searchedItem.toLowerCase()) ||\n          item.yearOfPublication.toString().includes(searchedItem.toString())\n        );\n      });\n    } else {\n      newBookList = this.state.setBookList;\n    }\n    this.setState({\n      bookList: newBookList\n    });\n    debugger;\n  };\n\n  handleAddToCart = book => {\n    debugger;\n    const { cart } = this.state;\n    const cartItem = cart.find(x => x.id === book.id);\n    cart.length < 3\n      ? !cartItem && book.noOfBooks > 0\n        ? (book.noOfBooks = book.noOfBooks - 1) &&\n          this.setState({ cart: [...this.state.cart, book] })\n        : (book.noOfBooks = \"Stock not available\")\n      : alert(\"you reached the maximum number of books added to the cart!\");\n    debugger;\n  };\n\n  handleRemoveFromCart = book => {\n    debugger;\n    const { cart } = this.state;\n    const filteredCart = cart.filter(x => x.id !== book.id);\n    book.noOfBooks = ++book.noOfBooks;\n    this.setState({\n      cart: filteredCart\n    });\n    debugger;\n  };\n\n  handleCheckOut = books => {\n    const { bookList, bookNextAvailability } = this.state;\n    debugger;\n    let filteredBooks = [];\n    for (let book in books) {\n      debugger;\n      filteredBooks = bookList.filter(x =>\n        x.id === books[book].id ? (x.availability = \"no\") : x.availability\n      );\n    }\n    let todayDate = new Date();\n    let numberOfDaysToAdd = 5;\n    todayDate.setDate(todayDate.getDate() + numberOfDaysToAdd);\n    let dd = todayDate.getDate();\n    let mm = todayDate.getMonth();\n    let y = todayDate.getFullYear();\n\n    let predictedAvailaibility = dd + \"/\" + mm + \"/\" + y;\n    debugger;\n    this.setState({\n      bookList: filteredBooks,\n      cart: [],\n      bookNextAvailability: predictedAvailaibility\n    });\n    debugger;\n\n    // const requestBody = {\n    //   books: books\n    // };\n    // try {\n    //   const bookList = await updateBooks(POST_BOOKS, \"POST\", requestBody);\n    //   console.log(bookList);\n    //   this.setState({ bookList, setBookList: bookList });\n    // } catch (e) {\n    //   console.error(e);\n    // }\n  };\n\n  render() {\n    const {\n      cart,\n      bookList,\n      isOpen,\n      users,\n      isAuthenticated,\n      customInputLabel,\n      customInputPlaceHolder,\n      customPasswordLabel,\n      customPasswordPlaceHolder,\n      bookNextAvailability\n    } = this.state;\n    debugger;\n    return (\n      <div className=\"App\">\n        {isAuthenticated ? (\n          <Navbar color=\"lightgreen\" light expand=\"md\">\n            <NavbarBrand to={routes.books}>Smart Library</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <CartIcon\n                    cart={cart}\n                    handleRemoveFromCart={this.handleRemoveFromCart}\n                  >\n                    Cart\n                  </CartIcon>\n                </NavItem>\n                <NavItem>\n                  <AccountCircle className=\"user-icon\" />\n                  <button onClick={this.signOut}>Sign out</button>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        ) : (\n          <div className=\"container\">\n            <LoginPage\n              users={users}\n              isAuthenticated={isAuthenticated}\n              onUsernameChange={this.onUsernameChange}\n              onPasswordChange={this.onPasswordChange}\n              checkLogin={this.checkLogin}\n              customInputLabel={customInputLabel}\n              customInputPlaceHolder={customInputPlaceHolder}\n              customPasswordLabel={customPasswordLabel}\n              customPasswordPlaceHolder={customPasswordPlaceHolder}\n            />\n          </div>\n        )}\n        <Route\n          path={routes.cart}\n          render={() =>\n            isAuthenticated ? (\n              <Cart\n                cart={cart}\n                handleRemoveFromCart={this.handleRemoveFromCart}\n                handleCheckOut={this.handleCheckOut}\n              />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\"\n                }}\n              />\n            )\n          }\n        />\n        <Route\n          path={routes.books}\n          render={() =>\n            isAuthenticated ? (\n              <Books\n                bookList={bookList}\n                cart={cart}\n                availableDate={bookNextAvailability}\n                handleAddToCart={this.handleAddToCart}\n                handleRemoveFromCart={this.handleRemoveFromCart}\n                handleSearch={this.handleSearch}\n                isAuthenticated={isAuthenticated}\n              />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/login\"\n                }}\n              />\n            )\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.81c29bc5.gif\";"],"sourceRoot":""}